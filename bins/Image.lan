class Pixel
    R, G, B;
    
    function Pixel(R as integer, G as integer, B as integer)
        let this.R = R;
        let this.G = G;
        let this.B = B;
    endfunction
    
    function Pixel(mp)
        let this.R = mp[0];
        let this.G = mp[1];
        let this.B = mp[2];
    endfunction
endclass

class Image
    Bitmap;
    OriginalPath;
    
    function Image(path as string)
        let this.Bitmap = getImage(path);
        let this.OriginalPath = path;
    endfunction
    
    function Image(W as integer, H as integer)
        let this.Bitmap = newImage(W, H, 0, 0, 0);
        let this.OriginalPath = "Untitled.png";
    endfunction
    
    function Image(W as integer, H as integer, pixel as Pixel)
        let this.Bitmap = newImage(W, H, pixel.R, pixel.G, pixel.B);
        let this.OriginalPath = "Untitled.png";
    endfunction
    
    function Image(W as integer, H as integer, R as integer, G as integer, B as integer)
        let this.Bitmap = newImage(W, H, R, G, B);
        let this.OriginalPath = "Untitled.png";
    endfunction
    
    function GetPixel(X as integer, Y as integer)
        this.__CheckCoords(X, Y);
        return new Pixel(getImagePixel(this.Bitmap, X, Y));
    endfunction
    
    function UpdatePixel(X as integer, Y as integer, pixel as Pixel)
        this.__CheckCoords(X, Y);
        setImagePixel(this.Bitmap, X, Y, pixel.R, pixel, G, pixel, B);
    endfunction
    
    function UpdatePixel(X as integer, Y as integer, R as integer, G as integer, B as integer)
        this.__CheckCoords(X, Y);
        setImagePixel(this.Bitmap, X, Y, R, G, B);
    endfunction
    
    function GetWidth()
        return getImageWidth(this.Bitmap);
    endfunction
    
    function GetHeight()
        return getImageHeight(this.Bitmap);
    endfunction
    
    function drawLine(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer)
        drawImageLine(this.Bitmap,X1,Y1,X2,Y2,0,0,0,1);
    endfunction
    
    function drawLine(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, pixel as Pixel)
        drawImageLine(this.Bitmap,X1,Y1,X2,Y2,pixel.R,pixel.G,pixel.B,1);
    endfunction
    
    function drawLine(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, R as integer, G as integer, B as integer)
        drawImageLine(this.Bitmap,X1,Y1,X2,Y2,R,G,B,1);
    endfunction
    
    function drawLine(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, pixel as Pixel, T as integer)
        drawImageLine(this.Bitmap,X1,Y1,X2,Y2,pixel.R,pixel.G,pixel.B,T);
    endfunction
    
    function drawLine(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, R as integer, G as integer, B as integer, T as integer)
        drawImageLine(this.Bitmap,X1,Y1,X2,Y2,R,G,B,T);
    endfunction
    
    function drawRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer)
        drawImageRectangle(this.Bitmap, X1, Y1, X2, Y2, 0,0,0,1);
    endfunction
    
    function drawRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, pixel as Pixel)
        drawImageRectangle(this.Bitmap, X1, Y1, X2, Y2, pixel.R,pixel.G,pixel.B,1);
    endfunction
    
    function drawRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, R as integer, G as integer, B as integer)
        drawImageRectangle(this.Bitmap, X1, Y1, X2, Y2, R, G, B,1);
    endfunction
    
    function drawRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, pixel as Pixel, T as integer)
        drawImageRectangle(this.Bitmap, X1, Y1, X2, Y2, pixel.R,pixel.G,pixel.B,T);
    endfunction
    
    function drawRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, R as integer, G as integer, B as integer, T as integer)
        drawImageRectangle(this.Bitmap, X1, Y1, X2, Y2, R, G, B,T);
    endfunction
    
    function drawFilledRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer)
        drawImageFilledRectangle(this.Bitmap, X1, Y1, X2, Y2, 0, 0, 0, 1, 0 ,0 ,0);
    endfunction
    
    function drawFilledRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, pixel1 as Pixel)
        drawImageFilledRectangle(this.Bitmap, X1, Y1, X2, Y2, pixel1.R, pixel1.G, pixel1.B, 1, pixel1.R, pixel1.G, pixel1.B);
    endfunction
    
    function drawFilledRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, R1 as integer, G1 as integer, B1 as integer)
        drawImageFilledRectangle(this.Bitmap, X1, Y1, X2, Y2, R1, G1, B1, 1, R1 ,G1 ,B1);
    endfunction
    
    function drawFilledRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, pixel1 as Pixel, T as integer)
        drawImageFilledRectangle(this.Bitmap, X1, Y1, X2, Y2, pixel1.R, pixel1.G, pixel1.B, T, pixel1.R, pixel1.G, pixel1.B);
    endfunction
    
    function drawFilledRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, R1 as integer, G1 as integer, B1 as integer, T as integer)
        drawImageFilledRectangle(this.Bitmap, X1, Y1, X2, Y2, R1, G1, B1, T, R1 ,G1 ,B1);
    endfunction
    
    function drawFilledRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, pixel1 as Pixel, T as integer, pixel2 as Pixel)
        drawImageFilledRectangle(this.Bitmap, X1, Y1, X2, Y2, pixel1.R, pixel1.G, pixel1.B, T, pixel1.R, pixel1.G, pixel1.B);
    endfunction
    
    function drawFilledRectangle(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer, R1 as integer, G1 as integer, B1 as integer, T as integer, R2 as integer, G2 as integer, B2 as integer)
        drawImageFilledRectangle(this.Bitmap, X1, Y1, X2, Y2, R1, G1, B1, T, R2 ,G2 ,B2);
    endfunction
    
    function drawCircle(X as integer, Y as integer, RAD as integer)
        drawImageCircle(this.Bitmap, X, Y, RAD, 0, 0, 0, 1);
    endfunction
    
    function drawCircle(X as integer, Y as integer, RAD as integer, pixel as Pixel)
        drawImageCircle(this.Bitmap, X, Y, RAD, pixel.R, pixel.G, pixel.B, 1);
    endfunction
    
    function drawCircle(X as integer, Y as integer, RAD as integer, R as integer, G as integer, B as integer)
        drawImageCircle(this.Bitmap, X, Y, RAD, R, G, B, 1);
    endfunction
    
    function drawCircle(X as integer, Y as integer, RAD as integer, pixel as Pixel, T as integer)
        drawImageCircle(this.Bitmap, X, Y, RAD, pixel.R, pixel.G, pixel.B, T);
    endfunction
    
    function drawCircle(X as integer, Y as integer, RAD as integer, R as integer, G as integer, B as integer, T as integer)
        drawImageCircle(this.Bitmap, X, Y, RAD, R, G, B, T);
    endfunction
    
    function drawFilledCircle(X as integer, Y as integer, RAD as integer)
        drawImageFilledCircle(this.Bitmap, X, Y, RAD, 0, 0, 0, 1, 0, 0, 0);
    endfunction
    
    function drawFilledCircle(X as integer, Y as integer, RAD as integer, pixel as Pixel)
        drawImageFilledCircle(this.Bitmap, X, Y, RAD, pixel.R, pixel.G, pixel.B, 1, pixel.R, pixel.G, pixel.B);
    endfunction
    
    function drawFilledCircle(X as integer, Y as integer, RAD as integer, R as integer, G as integer, B as integer)
        drawImageFilledCircle(this.Bitmap, X, Y, RAD, R, G, B, 1, R, G, B);
    endfunction
    
    function drawFilledCircle(X as integer, Y as integer, RAD as integer, pixel as Pixel, T as integer)
        drawImageFilledCircle(this.Bitmap, X, Y, RAD, pixel.R, pixel.G, pixel.B, T, pixel.R, pixel.G, pixel.B);
    endfunction
    
    function drawFilledCircle(X as integer, Y as integer, RAD as integer, R as integer, G as integer, B as integer, T as integer)
        drawImageFilledCircle(this.Bitmap, X, Y, RAD, R, G, B, T, R, G, B);
    endfunction
    
    function drawFilledCircle(X as integer, Y as integer, RAD as integer, pixel as Pixel, T as integer, pixel2 as Pixel)
        drawImageFilledCircle(this.Bitmap, X, Y, RAD, pixel.R, pixel.G, pixel.B, T, pixel2.R, pixel2.G, pixel2.B);
    endfunction
    
    function drawFilledCircle(X as integer, Y as integer, RAD as integer, R as integer, G as integer, B as integer, T as integer, R2 as integer, G2 as integer, B2 as integer)
        drawImageFilledCircle(this.Bitmap, X, Y, RAD, R, G, B, T, R2, G2, B2);
    endfunction
    
    function drawText(text as string, X as integer, Y as integer)
        drawImageText(this.Bitmap, text, X, Y, 0, 0, 0, 12, "Arial");
    endfunction
    
    function drawText(text as string, X as integer, Y as integer, pixel as Pixel)
        drawImageText(this.Bitmap, text, X, Y, pixel.R, pixel.G, pixelB, 12, "Arial");
    endfunction
    
    function drawText(text as string, X as integer, Y as integer, R as integer, G as integer, B as integer)
        drawImageText(this.Bitmap, text, X, Y, R, G, B, 12, "Arial");
    endfunction
    
    function drawText(text as string, X as integer, Y as integer, pixel as Pixel, Size as integer)
        drawImageText(this.Bitmap, text, X, Y, pixel.R, pixel.G, pixelB, Size, "Arial");
    endfunction
    
    function drawText(text as string, X as integer, Y as integer, R as integer, G as integer, B as integer, Size as integer)
        drawImageText(this.Bitmap, text, X, Y, R, G, B, Size, "Arial");
    endfunction
    
    function drawText(text as string, X as integer, Y as integer, pixel as Pixel, Size as integer, Font as string)
        drawImageText(this.Bitmap, text, X, Y, pixel.R, pixel.G, pixelB, Size, Font);
    endfunction
    
    function drawText(text as string, X as integer, Y as integer, R as integer, G as integer, B as integer, Size as integer, Font as string)
        drawImageText(this.Bitmap, text, X, Y, R, G, B, Size, Font);
    endfunction
    
    function drawImage(image as Image)
        drawImageImage(this.Bitmap, image.Bitmap, 0, 0);
    endfunction
    
    function drawImage(image as Image, X as integer, Y as integer)
        drawImageImage(this.Bitmap, image.Bitmap, X, Y);
    endfunction
    
    function getTextWidth(text as string)
        return getTextWidth(text, "Arial", 12);
    endfunction
    
    function getTextWidth(text as string, Font as string)
        return getTextWidth(text, Font, 12);
    endfunction
    
    function getTextWidth(text as string, Size as integer)
        return getTextWidth(text, "Arial", Size);
    endfunction
    
    function getTextWidth(text as string, Font as string, Size as integer)
        return getTextWidth(text, Font, Size);
    endfunction
        function getTextHeight(text as string)
        return getTextHeight(text, "Arial", 12);
    endfunction
    
    function getTextHeight(text as string, Font as string)
        return getTextHeight(text, Font, 12);
    endfunction
    
    function getTextHeight(text as string, Size as integer)
        return getTextHeight(text, "Arial", Size);
    endfunction
    
    function getTextHeight(text as string, Font as string, Size as integer)
        return getTextHeight(text, Font, Size);
    endfunction
    
    function cropImage(X1 as integer, Y1 as integer, X2 as integer, Y2 as integer)
        cropImage(this.Bitmap, X1, Y1, X2, Y2);
    endfunction
    
     function Save()
        saveImage(this.Bitmap, this.OriginalPath);
    endfunction
    
    function Save(path as string)
        saveImage(this.Bitmap, path);
    endfunction
    
    function __CheckCoords(X, Y)
        if(X < 0 | X >= this.GetWidth() | Y < 0 | Y > this.GetHeight())
            raise "Coordinates out of bounds!";
        endif
    endfunction
endclass
